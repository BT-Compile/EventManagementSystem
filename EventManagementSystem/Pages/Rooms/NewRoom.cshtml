@page
@model EventManagementSystem.Pages.Rooms.NewRoomModel
@{
    ViewData["Title"] = "New Room";
}

<form asp-page="NewActivity">
    <input type="hidden" asp-for="@Model.RoomToCreate.RoomID" />
    <label asp-for="@Model.RoomToCreate.RoomNumber"></label>
    <input type="text" asp-for="@Model.RoomToCreate.RoomNumber" id="RoomNumber" required />
    <br />
    <label asp-for="@Model.RoomToCreate.Capacity"></label>
    <input type="text" asp-for="@Model.RoomToCreate.Capacity" id="Capacity" required />
    <br />
    <label asp-for="@Model.RoomToCreate.BuildingName"></label>
    <select asp-for="@Model.RoomToCreate.BuildingName" asp-items="Model.Buildings" required>
        <option value=""></option>
    </select>
    <br />
    <button type="button" onclick="populateForm()">Populate</button>
    &emsp; <!-- Tab character to separate populate and clear buttons -->
    <button type="button" onclick="clearForm()">Clear</button>
    <br /><br />
    <input type="submit" class="btn btn-success" asp-page="NewRoom" />
    <a asp-page="AdminRoom" class="btn btn-secondary">Cancel</a>
</form>

<script>
    // links to the Populate button, which populates all fields but DOES NOT send a post request
    function populateForm() {
        document.getElementById("RoomNumber").value = "110";
        document.getElementById("Capacity").value = "31";
        document.getElementById("BuildingID").value = "1";
    }

    function clearForm() {
        document.getElementById("RoomNumber").value = "";
        document.getElementById("Capacity").value = "";
        document.getElementById("BuildingID").value = "";
    }
</script>
